NOTE: PROCEDURE PRINTTO used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1268  
1269  * Additionally, examine the age distribution for questions ;
1270  * of generalizability.  How does the pts_smpl=1 population ;
1271  * differ from the full NCS-R sample? ;
1272  ods pdf file = "&outputs/RS5-Age_MTO_vs_NCSR.pdf";
NOTE: Writing ODS PDF output to DISK destination 
      "C:\Users\Anolinx\MTO\outputs\RS5-Age_MTO_vs_NCSR.pdf", printer "PDF".
1273  title "Age distributions in NCSR and MTO barely overlap";
1274  proc sort data=NCSR.ncsr;
1275    by pts_smpl;

NOTE: Input data set is already sorted, no sorting done.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1276  proc means data=NCSR.ncsr;
1277    var age;
1278    by pts_smpl;
1279  run;

ERROR: Format AGE not found or couldn't be loaded for variable AGE.
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      
1280  
1281  * Plot a histogram to show the age density clearly, ;
1282  * both for pts_smpl=1 and pts_smpl=0 groups.        ;
1283  ods graphics / reset attrpriority=color width=5in height=3in imagename='NCSR_age';
1284  
1285  %macro plot_age_dens;
1286  %IF &workstation = Seattle %THEN %DO;
1287  proc sgplot data=NCSR.ncsr;
1288    histogram age / group=pts_smpl filltype=gradient transparency=0.5
1289                    nbins=75 name='est';
1290    density age / group=pts_smpl;
1291    xaxis display=(nolabel) min=15 max=90;
1292    yaxis grid;
1293    keylegend 'est' / location=inside across=1 position=topright;
1294  run;
1295  %END;
1296  %IF &workstation = SLC %THEN %DO;
1297  proc sgplot data=NCSR.ncsr;
1298    histogram age/ nbins=75 name='est';
1299    density age;
1300    xaxis display=(nolabel) min=15 max=90;
1301    yaxis grid;
1302    keylegend 'est' / location=inside across=1 position=topright;
1303    by pts_smpl;
1304  run;
1305  %END;
1306  %mend;
1307  %plot_age_dens;


MPRINT(PLOT_AGE_DENS):   proc sgplot data=NCSR.ncsr;
MPRINT(PLOT_AGE_DENS):   histogram age/ nbins=75 name='est';
MPRINT(PLOT_AGE_DENS):   density age;
MPRINT(PLOT_AGE_DENS):   xaxis display=(nolabel) min=15 max=90;
MPRINT(PLOT_AGE_DENS):   yaxis grid;
MPRINT(PLOT_AGE_DENS):   keylegend 'est' / location=inside across=1 position=topright;
MPRINT(PLOT_AGE_DENS):   by pts_smpl;
MPRINT(PLOT_AGE_DENS):   run;

ERROR: Format AGE not found or couldn't be loaded for variable AGE.
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SGPLOT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      
1308  ods pdf close;
NOTE: ODS PDF printed no output. 
      (This sometimes results from failing to place a RUN statement before the ODS PDF CLOSE 
      statement.)
1309  
1310  * TODO: Plot a similar histogram demonstrating the negligible overlap ;
1311  *       of the age distributions of MTO and NCS-R.                    ;
1312  
1313  /* end of STEP V */
1314  
1315  /*  STEP_Z -- Invoke a slightly modified version of Matt Sciandra's imputation code
1316   * TODO: Ultimately, we hope to extract from Matt Sciandra's imputation code just the
1317   *       essential parts for our investigation of PTSD.  At present, his code is very
1318   *       general, and probably does a lot of extra work that makes the program run
1319   *       quite slowly -- taking 3-4 minutes to run  Obviously, that won't
1320   *       do inside our bootstrapping loop!
1321   *       HOWEVER, it is important to make only minimal changes to that program until
1322   *       we have successfully reproduced the original model coefficients.
1323   ***********************************************************************************
1324   *                                                       add/remove forward slash --^ ;
1325   *                                                       to enable/disable STEP Z     ;
1326  %macro multi_seed;
1327      %do seed_1 = 121 %to 130;
1328          %include "&folder/mto_jama_sas_code_20160114/1_mto_jama_impute_data_20160111.sas";
1329          dm 'clear log';
1330      %end;
1331  %mend; * multi_seed ;
1332  %multi_seed;
1333  /* end of STEP Z */
1334  
1335  /*  STEP VI -- Bootstrap the voucher effects
1336   ********************************************/
1337   *                add/remove forward slash --^ ;
1338   *                to enable/disable STEP VI    ;
1339  /*
1340  PROC PRINTTO NEW
1341    LOG="&outputs/RS6.log";
1342  RUN;
1343  */
1344  * Draw 10^5 different sets of imputation coefficients from the posterior      ;
1345  * density implied by the original coefficients of the JAMA article, taken     ;
1346  * together with their variance-covariance matrix received from Nancy Sampson. ;
1347  * Demonstrate that the mean and covariance matrix for these samples match     ;
1348  * closely the desired values.   ;
1349  


1350  proc iml;
NOTE: IML Ready
1351    title1 "Sampling from joint posterior of PTSD model coefficients";
1352    title2 "(with illustrative sample printouts and checks on sample mean and covariance)";
1353    load their_beta their_cov CovarNames;
NOTE: Opening storage library WORK.IMLSTOR
1354    call randseed(2016);
1355    betas_posterior_samples = RandNormal(100000, their_beta, their_cov);
NOTE: Module RANDNORMAL loaded from the storage SASHELP.IMLMLIB.
NOTE: Module ROWVEC loaded from the storage SASHELP.IMLMLIB.
1356    * Simply overwrite the first sample with the original beta vector ;
1357    betas_posterior_samples[1,] = their_beta;
1358    sample_labels = {"Original" "Sample 1" "Sample 2" "Sample 3" "Sample 4"};
1359    print(betas_posterior_samples[1:5,])[Label="Original and first 4 sampled coefficient
1359! vectors"
1360     colname=CovarNames rowname=sample_labels];
1361    SampleMean = mean(betas_posterior_samples);
1362    SampleCov = cov(betas_posterior_samples);
1363    compare_means = SampleMean // their_beta;
1364    print compare_means[colname=CovarNames rowname={"Sample Mean" "Their Betas"}];
1365    print SampleCov[colname=CovarNames rowname=CovarNames];
1366    cov_diff = SampleCov - their_cov;
1367    print cov_diff[colname=CovarNames rowname=CovarNames];
1368    store betas_posterior_samples;
1369  run;
NOTE: Module MAIN is undefined in IML; cannot be RUN.
1370  
1371  * Define the %mtoptsd macro needed by impdata20x.sas, which is    ;
1372  * %included by the bootstrap loop below.                          ;
1373  * --------------------------------------------------------------- ;
1374  * Macro 'mtopdsd' is copied wholesale from Ptsd_MTO_youth.sas.    ;
1375  * It computes the several PTSD criteria that were operationalized ;
1376  * in the MTO Youth Final Survey, and also cross-walks from NCSR   ;
1377  * to MTO survey question variables, by renaming MTO variables to  ;
1378  * their NCSR equivalents.                                         ;
1379  * This enables the PTSD imputation model estimated in NCSR to be  ;
1380  * applied AS-IS to MTO data, without renaming its RHS variables.  ;
1381  * (It is a dual-purpose macro intended for both A=adult and       ;
1382  * Y=youth data sets -- hence its 2nd argument.)                   ;
1383  %macro mtoptsd(datain, pfx, dataout);
1384  
1385     * MTO Adult questionnaire PTSD data ;
1386     data &dataout;
1387     set &datain;
1388  
1389     * Criteria A1 ;
1390     if &pfx.CV1_PT13 = 1 or &pfx.CV2_PT14 = 1 or &pfx.CV3_PT15 = 1 or &pfx.CV4_PT16 = 1 or
1390! &pfx.CV5_PT17 = 1 or
1391        &pfx.CV6_PT18 = 1 or &pfx.CV7_PT20 = 1 or &pfx.CV8_PT22 = 1 or &pfx.CV9_PT22_1 = 1 or
1391! &pfx.CV10_PT23 = 1 or
1392        &pfx.CV11_PT27 = 1 then f_mh_pts_a1 = 1;
1393     else f_mh_pts_a1 = 0;
1394  
1395     * Criteria C1 ;
1396     if sum(&pfx.CV21_PT275 = 1 or &pfx.CV30_PT275 = 1, &pfx.CV15_PT269 = 1 or &pfx.CV24_PT269
1396!  = 1,
1397            &pfx.CV16_PT270 = 1 or &pfx.CV25_PT270 = 1, &pfx.CV17_PT271 = 1 or &pfx.CV26_PT271
1397!  = 1,
1398            &pfx.CV18_PT272 = 1 or &pfx.CV27_PT272 = 1) >= 3 then f_mh_pts_c1 = 1;
1398!   * Yes ;
1399     else f_mh_pts_c1 = 0;
1400  
1401     * Criteria D1 ;
1402     if (&pfx.CV19_PT273 = 1 or &pfx.CV28_PT273 = 1) and (&pfx.CV20_PT274 = 1 or
1402! &pfx.CV29_PT274 = 1)
1403         then f_mh_pts_d1 = 1;  * Yes ;
1404     else f_mh_pts_d1 = 0;
1405  
1406     if f_mh_pts_a1 = 1 and f_mh_pts_c1 = 1 and f_mh_pts_d1 = 1 then mto_ptsd_sample = 1;
1407     else mto_ptsd_sample = 0;
1408  
1409     array PTVAR &pfx.CV1_PT13 &pfx.CV2_PT14 &pfx.CV3_PT15 &pfx.CV4_PT16 &pfx.CV5_PT17
1410                 &pfx.CV6_PT18 &pfx.CV7_PT20 &pfx.CV8_PT22 &pfx.CV9_PT22_1 &pfx.CV10_PT23
1411                 &pfx.CV11_PT27 &pfx.CV13_PT62 &pfx.CV15_PT269 &pfx.CV16_PT270 &pfx.CV17_PT271
1412                 &pfx.CV18_PT272 &pfx.CV19_PT273 &pfx.CV20_PT274 &pfx.CV21_PT275
1413                 &pfx.CV24_PT269 &pfx.CV25_PT270 &pfx.CV26_PT271 &pfx.CV27_PT272
1413! &pfx.CV28_PT273
1414                 &pfx.CV29_PT274 &pfx.CV30_PT275;
1415     do over PTVAR;
1416        if PTVAR ^= 1 then PTVAR = 0;
1417     end;
1418  
1419     * Gender ;
1420     if f_svy_gender = 'F' then sexf = 1;
1421     else sexf = 0;
1422  
1423     * Race ;
1424     rhisp = 0;
1425     rwh = 0;
1426     rblk = 0;
1427     roth = 0;
1428     if f_svy_ethnic = 1 then rhisp = 1;
1429     else do;
1430        if f_svy_race = 1 then rblk = 1;
1431        else if f_svy_race = 2 then rwh = 1;
1432        else if f_svy_race IN(3,4,5) then roth = 1;
1433     end;
1434  
1435     in_mto = 1;
1436  
1437     if 0 <= f_svy_age_iw <= 18 then age = 18;
1438     else age = f_svy_age_iw;
1439  
1440     * Create corresponding NCSR variables ;
1441     if &pfx.CV15_PT269 = 1 or &pfx.CV24_PT269 = 1 then PT211 = 1;
1442     else PT211 = 0;
1443  
1444     if &pfx.CV16_PT270 = 1 or &pfx.CV25_PT270 = 1 then PT212 = 1;
1445     else PT212 = 0;
1446  
1447     if &pfx.CV17_PT271 = 1 or &pfx.CV26_PT271 = 1 then PT213 = 1;
1448     else PT213 = 0;
1449  
1450     if &pfx.CV18_PT272 = 1 or &pfx.CV27_PT272 = 1 then PT214 = 1;
1451     else PT214 = 0;
1452  
1453     if &pfx.CV19_PT273 = 1 or &pfx.CV28_PT273 = 1 then PT233 = 1;
1454     else PT233 = 0;
1455  
1456     if &pfx.CV20_PT274 = 1 or &pfx.CV29_PT274 = 1 then PT237 = 1;
1457     else PT237 = 0;
1458  
1459     if &pfx.CV21_PT275 = 1 or &pfx.CV30_PT275 = 1 then PT209 = 1;
1460     else PT209 = 0;
1461  
1462     format _numeric_;
1463     rename &pfx.CV1_PT13 = PT41
1464            &pfx.CV2_PT14 = PT42
1465            &pfx.CV3_PT15 = PT43
1466            &pfx.CV4_PT16 = PT44
1467            &pfx.CV5_PT17 = PT45
1468            &pfx.CV6_PT18 = PT46
1469            &pfx.CV7_PT20 = PT48
1470            &pfx.CV8_PT22 = PT50
1471            &pfx.CV9_PT22_1 = PT50_1
1472            &pfx.CV10_PT23 = PT51
1473            &pfx.CV11_PT27 = PT55;
1474     run;
1475  
1476  %mend mtoptsd;
1477  
1478  * Iterate over the betas_posterior_samples, constructing a model    ;
1479  * formula for each one and passing it to the impdata20x.sas script. ;
1480  * Collect the resulting voucher effect estimates with their CIs.    ;
1481  
1482  libname OUTPUTS "&outputs";
NOTE: Libref OUTPUTS was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: C:\Users\Anolinx\MTO\outputs
NOTE: Exiting IML.
NOTE: Storage library WORK.IMLSTOR closed.
NOTE: PROCEDURE IML used (Total process time):
      real time           0.35 seconds
      cpu time            0.34 seconds
      

1483  proc iml;
NOTE: IML Ready
1484    *title1 "Constructing PTSD imputation model formulas";
1485    *title2 "(to be passed one-by-one as 'formula' to Ptsd_MTO_youth.sas)";
1486    load betas_posterior_samples CovarNames;
NOTE: Opening storage library WORK.IMLSTOR
1487    CovarNames[loc(CovarNames='Intercept')] = "1";
1488    if exist("OUTPUTS.orci") then
1489      edit OUTPUTS.orci;
1490    else create OUTPUTS.orci var {imod seed OddsRatioEst LowerCL UpperCL};
1491    do imod = 30 to 30;
1492      coefs = betas_posterior_samples[imod,];
1493      * convert coefs to explicitly (+/-) signed strings ;
1494      signs = repeat(" ",1,ncol(coefs));
1495      signs[loc(coefs>=0)] = "+";
1496      coefs = catx("", signs, coefs);
1497      * generate formula terms, then concatenate them ;
1498      terms = catx("*",coefs,CovarNames`);
1499      formula = rowcatc(terms);
1500      *title1 "Passing this formula to Ptsd_MTO_youth.sas script";
1501      *print formula;
1502      *title1;
1503      do seed = 121 to 130;
1504        submit formula seed; * the 'formula' parameter allows substitution below;
1505          %let formula=&formula; * sets a &formula macro for impdata20x.sas;
1506          %let seedused=&seed;
1507          %include "&reanalysis/impdata20x.sas";
1508        endsubmit;
1509        * Extract the desired effect estimate and its CI ;
1510        use ORs;
1511        read all var {Effect _Imputation_ OddsRatioEst LowerCL UpperCL};
1512        close ORs;
1513        effrow = loc(compbl(Effect)='ra_grp_exp'
1514                         & _Imputation_=.);
1515        OddsRatioEst = OddsRatioEst[effrow];
1516        LowerCL = LowerCL[effrow];
1517        UpperCL = UpperCL[effrow];
1518        append var {imod seed OddsRatioEst LowerCL UpperCL};
1519      end;
1519!          * seed_1 loop ;
1520    end;
NOTE: The data set WORK.ORS has 42 observations and 6 variables.
NOTE: The data set WORK.PARMEST has 168 observations and 9 variables.
NOTE: The data set WORK.ORS has 42 observations and 6 variables.
NOTE: The data set WORK.PARMEST has 168 observations and 9 variables.
NOTE: The data set WORK.ORS has 42 observations and 6 variables.
NOTE: The data set WORK.PARMEST has 168 observations and 9 variables.
NOTE: The data set WORK.ORS has 42 observations and 6 variables.
NOTE: The data set WORK.PARMEST has 168 observations and 9 variables.
NOTE: The data set WORK.ORS has 42 observations and 6 variables.
NOTE: The data set WORK.PARMEST has 189 observations and 9 variables.
NOTE: The data set WORK.ORS has 42 observations and 6 variables.
NOTE: The data set WORK.PARMEST has 189 observations and 9 variables.
NOTE: The data set WORK.ORS has 42 observations and 6 variables.
NOTE: The data set WORK.PARMEST has 168 observations and 9 variables.
NOTE: The data set WORK.ORS has 42 observations and 6 variables.
NOTE: The data set WORK.PARMEST has 189 observations and 9 variables.
NOTE: The data set WORK.ORS has 42 observations and 6 variables.
NOTE: The data set WORK.PARMEST has 189 observations and 9 variables.
NOTE: The data set WORK.ORS has 42 observations and 6 variables.
NOTE: The data set WORK.PARMEST has 189 observations and 9 variables.
1520!        * imod loop ;
1521    close OUTPUTS.orci;
NOTE: The data set OUTPUTS.ORCI has 900 observations and 5 variables.
1522  run;
NOTE: Module MAIN is undefined in IML; cannot be RUN.
1523  quit;
NOTE: Exiting IML.
NOTE: Storage library WORK.IMLSTOR closed.
NOTE: PROCEDURE IML used (Total process time):
      real time           52.30 seconds
      cpu time            47.60 seconds
      

1524  
1525  /* end of STEP VI */
1526  
1527  /* --- References ---
1528  1. Kessler RC, Duncan GJ, Gennetian LA, et al. Associations of Housing Mobility
1528! Interventions
1529     for Children in High-Poverty Neighborhoods with Subsequent Mental Disorders during
1529! Adolescence.
1530     JAMA 311, no. 9 (March 5, 2014): 937-48. doi:10.1001/jama.2014.607.
1531  
1532      */

1533  libname OUTPUTS "&outputs";
NOTE: Libref OUTPUTS was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: C:\Users\Anolinx\MTO\outputs
1534  proc iml;
NOTE: IML Ready
1535    title1 "Sampling from joint posterior of PTSD model coefficients";
1536    title2 "(with illustrative sample printouts and checks on sample mean and covariance)";
1537    load their_beta their_cov CovarNames;
NOTE: Opening storage library WORK.IMLSTOR
1538    call randseed(2016);
1539    betas_posterior_samples = RandNormal(100000, their_beta, their_cov);
NOTE: Module RANDNORMAL loaded from the storage SASHELP.IMLMLIB.
NOTE: Module ROWVEC loaded from the storage SASHELP.IMLMLIB.
1540    * Simply overwrite the first sample with the original beta vector ;
1541    betas_posterior_samples[1,] = their_beta;
1542    sample_labels = {"Original" "Sample 1" "Sample 2" "Sample 3" "Sample 4"};
1543    print(betas_posterior_samples[1:5,])[Label="Original and first 4 sampled coefficient
1543! vectors"
1544     colname=CovarNames rowname=sample_labels];
1545    * Write out betas_posterior_samples ;
1546    create OUTPUTS.betas_samples from betas_posterior_samples;
1547    append from betas_posterior_samples;
1548    close OUTPUTS.betas_samples;
NOTE: The data set OUTPUTS.BETAS_SAMPLES has 100000 observations and 24 variables.
1549    SampleMean = mean(betas_posterior_samples);
1550    SampleCov = cov(betas_posterior_samples);
1551    compare_means = SampleMean // their_beta;
1552    print compare_means[colname=CovarNames rowname={"Sample Mean" "Their Betas"}];
1553    print SampleCov[colname=CovarNames rowname=CovarNames];
1554    cov_diff = SampleCov - their_cov;
1555    print cov_diff[colname=CovarNames rowname=CovarNames];
1556    store betas_posterior_samples;
1557  run;
NOTE: Module MAIN is undefined in IML; cannot be RUN.
1558  libname OUTPUTS "&outputs";
NOTE: Libref OUTPUTS was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: C:\Users\Anolinx\MTO\outputs
NOTE: Exiting IML.
NOTE: Storage library WORK.IMLSTOR closed.
NOTE: PROCEDURE IML used (Total process time):
      real time           4:30.77
      cpu time            14.92 seconds
      

1559  proc iml;
NOTE: IML Ready
1560    title1 "Sampling from joint posterior of PTSD model coefficients";
1561    title2 "(with illustrative sample printouts and checks on sample mean and covariance)";
1562    load their_beta their_cov CovarNames;
NOTE: Opening storage library WORK.IMLSTOR
1563    call randseed(2016);
1564    betas_posterior_samples = RandNormal(100000, their_beta, their_cov);
NOTE: Module RANDNORMAL loaded from the storage SASHELP.IMLMLIB.
NOTE: Module ROWVEC loaded from the storage SASHELP.IMLMLIB.
1565    * Simply overwrite the first sample with the original beta vector ;
1566    betas_posterior_samples[1,] = their_beta;
1567    sample_labels = {"Original" "Sample 1" "Sample 2" "Sample 3" "Sample 4"};
1568    print(betas_posterior_samples[1:5,])[Label="Original and first 4 sampled coefficient
1568! vectors"
1569     colname=CovarNames rowname=sample_labels];
1570    * Write out betas_posterior_samples ;
1571    create OUTPUTS.betas_samples from betas_posterior_samples colname=CovarNames;
                                                                  -------
                                                                  22
                                                                  202
ERROR 22-322: Syntax error, expecting one of the following: (|, [.  

ERROR 202-322: The option or parameter is not recognized and will be ignored.

1572    append from betas_posterior_samples;
ERROR: No data set is currently open for output.

 statement : APPEND at line 1572 column 3
1573    close OUTPUTS.betas_samples;
NOTE: Cannot close OUTPUTS.BETAS_SAMPLES; it is not open.
1574    SampleMean = mean(betas_posterior_samples);
1575    SampleCov = cov(betas_posterior_samples);
1576    compare_means = SampleMean // their_beta;
1577    print compare_means[colname=CovarNames rowname={"Sample Mean" "Their Betas"}];
1578    print SampleCov[colname=CovarNames rowname=CovarNames];
1579    cov_diff = SampleCov - their_cov;
1580    print cov_diff[colname=CovarNames rowname=CovarNames];
1581    store betas_posterior_samples;
1582  run;
NOTE: Module MAIN is undefined in IML; cannot be RUN.
1583  libname OUTPUTS "&outputs";
NOTE: Libref OUTPUTS was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: C:\Users\Anolinx\MTO\outputs
NOTE: Exiting IML.
NOTE: Storage library WORK.IMLSTOR closed.
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE IML used (Total process time):
      real time           6:17.38
      cpu time            24.59 seconds
      