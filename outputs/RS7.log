NOTE: PROCEDURE PRINTTO used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

448293    %include "&reanalysis/RS7_model_spec.sas";
MPRINT(RESAMPLE_BETAS):   proc iml;
NOTE: IML Ready
MPRINT(RESAMPLE_BETAS):   use betasa0r0s40;
MPRINT(RESAMPLE_BETAS):   read all var _num_ into alt_beta_a0r0s40;
MPRINT(RESAMPLE_BETAS):   close betasa0r0s40;
MPRINT(RESAMPLE_BETAS):   use covsa0r0s40;
MPRINT(RESAMPLE_BETAS):   read all var _num_ into 
alt_cov_a0r0s40[colname=CovarNames];
MPRINT(RESAMPLE_BETAS):   close covsa0r0s40;
MPRINT(RESAMPLE_BETAS):   call randseed(2016);
MPRINT(RESAMPLE_BETAS):   betas_posterior_samples = RandNormal(10, 
alt_beta_a0r0s40, alt_cov_a0r0s40);
NOTE: Module RANDNORMAL loaded from the storage SASHELP.IMLMLIB.
NOTE: Module ROWVEC loaded from the storage SASHELP.IMLMLIB.
MPRINT(RESAMPLE_BETAS):   * Simply overwrite the first sample with the 
estimated beta vector ;
MPRINT(RESAMPLE_BETAS):   betas_posterior_samples[1,] = alt_beta_a0r0s40`;
MPRINT(RESAMPLE_BETAS):   create betas_samples_a0r0s40 from 
betas_posterior_samples[colname=CovarNames];
MPRINT(RESAMPLE_BETAS):   append from betas_posterior_samples;
MPRINT(RESAMPLE_BETAS):   close betas_samples_a0r0s40;
NOTE: The data set WORK.BETAS_SAMPLES_A0R0S40 has 10 observations and 20 
      variables.
MPRINT(RESAMPLE_BETAS):   store betas_posterior_samples;
NOTE: Opening storage library WORK.IMLSTOR
MPRINT(RESAMPLE_BETAS):   quit;
NOTE: Exiting IML.
NOTE: Storage library WORK.IMLSTOR closed.
NOTE: PROCEDURE IML used (Total process time):
      real time           1.04 seconds
      cpu time            0.21 seconds
      

MPRINT(RESAMPLE_BETAS):   proc iml;
NOTE: IML Ready
MPRINT(RESAMPLE_BETAS):   use betasa0r0s99;
MPRINT(RESAMPLE_BETAS):   read all var _num_ into alt_beta_a0r0s99;
MPRINT(RESAMPLE_BETAS):   close betasa0r0s99;
MPRINT(RESAMPLE_BETAS):   use covsa0r0s99;
MPRINT(RESAMPLE_BETAS):   read all var _num_ into 
alt_cov_a0r0s99[colname=CovarNames];
MPRINT(RESAMPLE_BETAS):   close covsa0r0s99;
MPRINT(RESAMPLE_BETAS):   call randseed(2016);
MPRINT(RESAMPLE_BETAS):   betas_posterior_samples = RandNormal(10, 
alt_beta_a0r0s99, alt_cov_a0r0s99);
NOTE: Module RANDNORMAL loaded from the storage SASHELP.IMLMLIB.
NOTE: Module ROWVEC loaded from the storage SASHELP.IMLMLIB.
MPRINT(RESAMPLE_BETAS):   * Simply overwrite the first sample with the 
estimated beta vector ;
MPRINT(RESAMPLE_BETAS):   betas_posterior_samples[1,] = alt_beta_a0r0s99`;
MPRINT(RESAMPLE_BETAS):   create betas_samples_a0r0s99 from 
betas_posterior_samples[colname=CovarNames];
MPRINT(RESAMPLE_BETAS):   append from betas_posterior_samples;
MPRINT(RESAMPLE_BETAS):   close betas_samples_a0r0s99;
NOTE: The data set WORK.BETAS_SAMPLES_A0R0S99 has 10 observations and 20 
      variables.
MPRINT(RESAMPLE_BETAS):   store betas_posterior_samples;
NOTE: Opening storage library WORK.IMLSTOR
MPRINT(RESAMPLE_BETAS):   quit;
NOTE: Exiting IML.
NOTE: Storage library WORK.IMLSTOR closed.
NOTE: PROCEDURE IML used (Total process time):
      real time           0.06 seconds
      cpu time            0.01 seconds
      

MPRINT(RESAMPLE_BETAS):   proc iml;
NOTE: IML Ready
MPRINT(RESAMPLE_BETAS):   use betasa0r1s40;
MPRINT(RESAMPLE_BETAS):   read all var _num_ into alt_beta_a0r1s40;
MPRINT(RESAMPLE_BETAS):   close betasa0r1s40;
MPRINT(RESAMPLE_BETAS):   use covsa0r1s40;
MPRINT(RESAMPLE_BETAS):   read all var _num_ into 
alt_cov_a0r1s40[colname=CovarNames];
MPRINT(RESAMPLE_BETAS):   close covsa0r1s40;
MPRINT(RESAMPLE_BETAS):   call randseed(2016);
MPRINT(RESAMPLE_BETAS):   betas_posterior_samples = RandNormal(10, 
alt_beta_a0r1s40, alt_cov_a0r1s40);
NOTE: Module RANDNORMAL loaded from the storage SASHELP.IMLMLIB.
NOTE: Module ROWVEC loaded from the storage SASHELP.IMLMLIB.
MPRINT(RESAMPLE_BETAS):   * Simply overwrite the first sample with the 
estimated beta vector ;
MPRINT(RESAMPLE_BETAS):   betas_posterior_samples[1,] = alt_beta_a0r1s40`;
MPRINT(RESAMPLE_BETAS):   create betas_samples_a0r1s40 from 
betas_posterior_samples[colname=CovarNames];
MPRINT(RESAMPLE_BETAS):   append from betas_posterior_samples;
MPRINT(RESAMPLE_BETAS):   close betas_samples_a0r1s40;
NOTE: The data set WORK.BETAS_SAMPLES_A0R1S40 has 10 observations and 23 
      variables.
MPRINT(RESAMPLE_BETAS):   store betas_posterior_samples;
NOTE: Opening storage library WORK.IMLSTOR
MPRINT(RESAMPLE_BETAS):   quit;
NOTE: Exiting IML.
NOTE: Storage library WORK.IMLSTOR closed.
NOTE: PROCEDURE IML used (Total process time):
      real time           0.06 seconds
      cpu time            0.00 seconds
      

MPRINT(RESAMPLE_BETAS):   proc iml;
NOTE: IML Ready
MPRINT(RESAMPLE_BETAS):   use betasa0r1s99;
MPRINT(RESAMPLE_BETAS):   read all var _num_ into alt_beta_a0r1s99;
MPRINT(RESAMPLE_BETAS):   close betasa0r1s99;
MPRINT(RESAMPLE_BETAS):   use covsa0r1s99;
MPRINT(RESAMPLE_BETAS):   read all var _num_ into 
alt_cov_a0r1s99[colname=CovarNames];
MPRINT(RESAMPLE_BETAS):   close covsa0r1s99;
MPRINT(RESAMPLE_BETAS):   call randseed(2016);
MPRINT(RESAMPLE_BETAS):   betas_posterior_samples = RandNormal(10, 
alt_beta_a0r1s99, alt_cov_a0r1s99);
NOTE: Module RANDNORMAL loaded from the storage SASHELP.IMLMLIB.
NOTE: Module ROWVEC loaded from the storage SASHELP.IMLMLIB.
MPRINT(RESAMPLE_BETAS):   * Simply overwrite the first sample with the 
estimated beta vector ;
MPRINT(RESAMPLE_BETAS):   betas_posterior_samples[1,] = alt_beta_a0r1s99`;
MPRINT(RESAMPLE_BETAS):   create betas_samples_a0r1s99 from 
betas_posterior_samples[colname=CovarNames];
MPRINT(RESAMPLE_BETAS):   append from betas_posterior_samples;
MPRINT(RESAMPLE_BETAS):   close betas_samples_a0r1s99;
NOTE: The data set WORK.BETAS_SAMPLES_A0R1S99 has 10 observations and 23 
      variables.
MPRINT(RESAMPLE_BETAS):   store betas_posterior_samples;
NOTE: Opening storage library WORK.IMLSTOR
MPRINT(RESAMPLE_BETAS):   quit;
NOTE: Exiting IML.
NOTE: Storage library WORK.IMLSTOR closed.
NOTE: PROCEDURE IML used (Total process time):
      real time           0.06 seconds
      cpu time            0.01 seconds
      

MPRINT(RESAMPLE_BETAS):   proc iml;
NOTE: IML Ready
MPRINT(RESAMPLE_BETAS):   use betasa1r0s40;
MPRINT(RESAMPLE_BETAS):   read all var _num_ into alt_beta_a1r0s40;
MPRINT(RESAMPLE_BETAS):   close betasa1r0s40;
MPRINT(RESAMPLE_BETAS):   use covsa1r0s40;
MPRINT(RESAMPLE_BETAS):   read all var _num_ into 
alt_cov_a1r0s40[colname=CovarNames];
MPRINT(RESAMPLE_BETAS):   close covsa1r0s40;
MPRINT(RESAMPLE_BETAS):   call randseed(2016);
MPRINT(RESAMPLE_BETAS):   betas_posterior_samples = RandNormal(10, 
alt_beta_a1r0s40, alt_cov_a1r0s40);
NOTE: Module RANDNORMAL loaded from the storage SASHELP.IMLMLIB.
NOTE: Module ROWVEC loaded from the storage SASHELP.IMLMLIB.
MPRINT(RESAMPLE_BETAS):   * Simply overwrite the first sample with the 
estimated beta vector ;
MPRINT(RESAMPLE_BETAS):   betas_posterior_samples[1,] = alt_beta_a1r0s40`;
MPRINT(RESAMPLE_BETAS):   create betas_samples_a1r0s40 from 
betas_posterior_samples[colname=CovarNames];
MPRINT(RESAMPLE_BETAS):   append from betas_posterior_samples;
MPRINT(RESAMPLE_BETAS):   close betas_samples_a1r0s40;
NOTE: The data set WORK.BETAS_SAMPLES_A1R0S40 has 10 observations and 21 
      variables.
MPRINT(RESAMPLE_BETAS):   store betas_posterior_samples;
NOTE: Opening storage library WORK.IMLSTOR
MPRINT(RESAMPLE_BETAS):   quit;
NOTE: Exiting IML.
NOTE: Storage library WORK.IMLSTOR closed.
NOTE: PROCEDURE IML used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      

MPRINT(RESAMPLE_BETAS):   proc iml;
NOTE: IML Ready
MPRINT(RESAMPLE_BETAS):   use betasa1r0s99;
MPRINT(RESAMPLE_BETAS):   read all var _num_ into alt_beta_a1r0s99;
MPRINT(RESAMPLE_BETAS):   close betasa1r0s99;
MPRINT(RESAMPLE_BETAS):   use covsa1r0s99;
MPRINT(RESAMPLE_BETAS):   read all var _num_ into 
alt_cov_a1r0s99[colname=CovarNames];
MPRINT(RESAMPLE_BETAS):   close covsa1r0s99;
MPRINT(RESAMPLE_BETAS):   call randseed(2016);
MPRINT(RESAMPLE_BETAS):   betas_posterior_samples = RandNormal(10, 
alt_beta_a1r0s99, alt_cov_a1r0s99);
NOTE: Module RANDNORMAL loaded from the storage SASHELP.IMLMLIB.
NOTE: Module ROWVEC loaded from the storage SASHELP.IMLMLIB.
MPRINT(RESAMPLE_BETAS):   * Simply overwrite the first sample with the 
estimated beta vector ;
MPRINT(RESAMPLE_BETAS):   betas_posterior_samples[1,] = alt_beta_a1r0s99`;
MPRINT(RESAMPLE_BETAS):   create betas_samples_a1r0s99 from 
betas_posterior_samples[colname=CovarNames];
MPRINT(RESAMPLE_BETAS):   append from betas_posterior_samples;
MPRINT(RESAMPLE_BETAS):   close betas_samples_a1r0s99;
NOTE: The data set WORK.BETAS_SAMPLES_A1R0S99 has 10 observations and 21 
      variables.
MPRINT(RESAMPLE_BETAS):   store betas_posterior_samples;
NOTE: Opening storage library WORK.IMLSTOR
MPRINT(RESAMPLE_BETAS):   quit;
NOTE: Exiting IML.
NOTE: Storage library WORK.IMLSTOR closed.
NOTE: PROCEDURE IML used (Total process time):
      real time           0.04 seconds
      cpu time            0.00 seconds
      

MPRINT(RESAMPLE_BETAS):   proc iml;
NOTE: IML Ready
MPRINT(RESAMPLE_BETAS):   use betasa1r1s40;
MPRINT(RESAMPLE_BETAS):   read all var _num_ into alt_beta_a1r1s40;
MPRINT(RESAMPLE_BETAS):   close betasa1r1s40;
MPRINT(RESAMPLE_BETAS):   use covsa1r1s40;
MPRINT(RESAMPLE_BETAS):   read all var _num_ into 
alt_cov_a1r1s40[colname=CovarNames];
MPRINT(RESAMPLE_BETAS):   close covsa1r1s40;
MPRINT(RESAMPLE_BETAS):   call randseed(2016);
MPRINT(RESAMPLE_BETAS):   betas_posterior_samples = RandNormal(10, 
alt_beta_a1r1s40, alt_cov_a1r1s40);
NOTE: Module RANDNORMAL loaded from the storage SASHELP.IMLMLIB.
NOTE: Module ROWVEC loaded from the storage SASHELP.IMLMLIB.
MPRINT(RESAMPLE_BETAS):   * Simply overwrite the first sample with the 
estimated beta vector ;
MPRINT(RESAMPLE_BETAS):   betas_posterior_samples[1,] = alt_beta_a1r1s40`;
MPRINT(RESAMPLE_BETAS):   create betas_samples_a1r1s40 from 
betas_posterior_samples[colname=CovarNames];
MPRINT(RESAMPLE_BETAS):   append from betas_posterior_samples;
MPRINT(RESAMPLE_BETAS):   close betas_samples_a1r1s40;
NOTE: The data set WORK.BETAS_SAMPLES_A1R1S40 has 10 observations and 24 
      variables.
MPRINT(RESAMPLE_BETAS):   store betas_posterior_samples;
NOTE: Opening storage library WORK.IMLSTOR
MPRINT(RESAMPLE_BETAS):   quit;
NOTE: Exiting IML.
NOTE: Storage library WORK.IMLSTOR closed.
NOTE: PROCEDURE IML used (Total process time):
      real time           0.14 seconds
      cpu time            0.01 seconds
      

MPRINT(RESAMPLE_BETAS):   proc iml;
NOTE: IML Ready
MPRINT(RESAMPLE_BETAS):   use betasa1r1s99;
MPRINT(RESAMPLE_BETAS):   read all var _num_ into alt_beta_a1r1s99;
MPRINT(RESAMPLE_BETAS):   close betasa1r1s99;
MPRINT(RESAMPLE_BETAS):   use covsa1r1s99;
MPRINT(RESAMPLE_BETAS):   read all var _num_ into 
alt_cov_a1r1s99[colname=CovarNames];
MPRINT(RESAMPLE_BETAS):   close covsa1r1s99;
MPRINT(RESAMPLE_BETAS):   call randseed(2016);
MPRINT(RESAMPLE_BETAS):   betas_posterior_samples = RandNormal(10, 
alt_beta_a1r1s99, alt_cov_a1r1s99);
NOTE: Module RANDNORMAL loaded from the storage SASHELP.IMLMLIB.
NOTE: Module ROWVEC loaded from the storage SASHELP.IMLMLIB.
MPRINT(RESAMPLE_BETAS):   * Simply overwrite the first sample with the 
estimated beta vector ;
MPRINT(RESAMPLE_BETAS):   betas_posterior_samples[1,] = alt_beta_a1r1s99`;
MPRINT(RESAMPLE_BETAS):   create betas_samples_a1r1s99 from 
betas_posterior_samples[colname=CovarNames];
MPRINT(RESAMPLE_BETAS):   append from betas_posterior_samples;
MPRINT(RESAMPLE_BETAS):   close betas_samples_a1r1s99;
NOTE: The data set WORK.BETAS_SAMPLES_A1R1S99 has 10 observations and 24 
      variables.
MPRINT(RESAMPLE_BETAS):   store betas_posterior_samples;
NOTE: Opening storage library WORK.IMLSTOR
MPRINT(RESAMPLE_BETAS):   quit;
NOTE: Exiting IML.
NOTE: Storage library WORK.IMLSTOR closed.
NOTE: PROCEDURE IML used (Total process time):
      real time           0.06 seconds
      cpu time            0.00 seconds
      

MPRINT(WRITE_PTSD_IMPUTATION_FORMULA):   data _null_;
MPRINT(WRITE_PTSD_IMPUTATION_FORMULA):   set betas_samples_A0R0S40;
MPRINT(WRITE_PTSD_IMPUTATION_FORMULA):   if _N_ = 1;
MPRINT(WRITE_PTSD_IMPUTATION_FORMULA):   * In case of missing coefs, set to 
zero ;
MPRINT(WRITE_PTSD_IMPUTATION_FORMULA):   if AGE=. then AGE=0;
MPRINT(WRITE_PTSD_IMPUTATION_FORMULA):   if SEXF=. then SEXF=0;
MPRINT(WRITE_PTSD_IMPUTATION_FORMULA):   if RHISP=. then RHISP=0;
MPRINT(WRITE_PTSD_IMPUTATION_FORMULA):   if RBLK=. then RBLK=0;
MPRINT(WRITE_PTSD_IMPUTATION_FORMULA):   if ROTH=. then ROTH=0;
MPRINT(WRITE_PTSD_IMPUTATION_FORMULA):   if PT41=. then PT41=0;
MPRINT(WRITE_PTSD_IMPUTATION_FORMULA):   if PT42=. then PT42=0;
MPRINT(WRITE_PTSD_IMPUTATION_FORMULA):   if PT43=. then PT43=0;
MPRINT(WRITE_PTSD_IMPUTATION_FORMULA):   if PT44=. then PT44=0;
MPRINT(WRITE_PTSD_IMPUTATION_FORMULA):   if PT45=. then PT45=0;
MPRINT(WRITE_PTSD_IMPUTATION_FORMULA):   if PT46=. then PT46=0;
MPRINT(WRITE_PTSD_IMPUTATION_FORMULA):   if PT48=. then PT48=0;
MPRINT(WRITE_PTSD_IMPUTATION_FORMULA):   if PT50=. then PT50=0;
MPRINT(WRITE_PTSD_IMPUTATION_FORMULA):   if PT50_1=. then PT50_1=0;
MPRINT(WRITE_PTSD_IMPUTATION_FORMULA):   if PT51=. then PT51=0;
MPRINT(WRITE_PTSD_IMPUTATION_FORMULA):   if PT55=. then PT55=0;
MPRINT(WRITE_PTSD_IMPUTATION_FORMULA):   if PT209=. then PT209=0;
MPRINT(WRITE_PTSD_IMPUTATION_FORMULA):   if PT211=. then PT211=0;
MPRINT(WRITE_PTSD_IMPUTATION_FORMULA):   if PT212=. then PT212=0;
MPRINT(WRITE_PTSD_IMPUTATION_FORMULA):   if PT213=. then PT213=0;
MPRINT(WRITE_PTSD_IMPUTATION_FORMULA):   if PT214=. then PT214=0;
MPRINT(WRITE_PTSD_IMPUTATION_FORMULA):   if PT233=. then PT233=0;
MPRINT(WRITE_PTSD_IMPUTATION_FORMULA):   if PT237=. then PT237=0;
MPRINT(WRITE_PTSD_IMPUTATION_FORMULA):   form = 
trim('1'||'*('||trim(left(put(Intercept,10.4)))||')+'|| 
'AGE'||'*('||trim(left(put(AGE,10.4)))||')+'|| 
'SEXF'||'*('||trim(left(put(SEXF,10.4)))||')+'|| 
'RHISP'||'*('||trim(left(put(RHISP,10.4)))||')+'|| 
'RBLK'||'*('||trim(left(put(RBLK,10.4)))||')+'|| 
'ROTH'||'*('||trim(left(put(ROTH,10.4)))||')+'|| 
'PT41'||'*('||trim(left(put(PT41,10.4)))||')+'|| 
'PT42'||'*('||trim(left(put(PT42,10.4)))||')+'|| 
'PT43'||'*('||trim(left(put(PT43,10.4)))||')+'|| 
'PT44'||'*('||trim(left(put(PT44,10.4)))||')+'|| 
'PT45'||'*('||trim(left(put(PT45,10.4)))||')+'|| 
'PT46'||'*('||trim(left(put(PT46,10.4)))||')+'|| 
'PT48'||'*('||trim(left(put(PT48,10.4)))||')+'|| 
'PT50'||'*('||trim(left(put(PT50,10.4)))||')+'|| 
'PT50_1'||'*('||trim(left(put(PT50_1,10.4)))||')+'|| 
'PT51'||'*('||trim(left(put(PT51,10.4)))||')+'|| 
'PT55'||'*('||trim(left(put(PT55,10.4)))||')+'|| 
'PT209'||'*('||trim(left(put(PT209,10.4)))||')+'|| 
'PT211'||'*('||trim(left(put(PT211,10.4)))||')+'|| 
'PT212'||'*('||trim(left(put(PT212,10.4)))||')+'|| 
'PT213'||'*('||trim(left(put(PT213,10.4)))||')+'|| 
'PT214'||'*('||trim(left(put(PT214,10.4)))||')+'|| 
'PT233'||'*('||trim(left(put(PT233,10.4)))||')+'|| 
'PT237'||'*('||trim(left(put(PT237,10.4))))||')';
MPRINT(WRITE_PTSD_IMPUTATION_FORMULA):   call symput('formula',form);
MPRINT(WRITE_PTSD_IMPUTATION_FORMULA):   run;

NOTE: There were 10 observations read from the data set 
      WORK.BETAS_SAMPLES_A0R0S40.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(GENERATE_ALT_RESULTS):  ;
MPRINT(GENERATE_ALT_RESULTS):   PROC PRINTTO;
MPRINT(GENERATE_ALT_RESULTS):   RUN;

